language: generic
sudo: false

matrix:
  include:
    - os: linux
      env: CXX=g++-4.9
      addons:
        apt:
          sources: [ 'ubuntu-toolchain-r-test' ]
          packages: [ 'g++-4.9' ]
    - os: linux
      env: CXX=g++-5
      addons:
        apt:
          sources: [ 'ubuntu-toolchain-r-test' ]
          packages: [ 'g++-5' ]
    - os: linux
      env: CXX=g++-6
      addons:
        apt:
          sources: [ 'ubuntu-toolchain-r-test' ]
          packages: [ 'g++-6' ]
    - os: linux
      env: CXX=clang++ CXXFLAGS="-flto"
      addons:
        apt:
          sources: [ 'ubuntu-toolchain-r-test' ]
          packages: [ 'libstdc++6','libstdc++-5-dev' ]
    - os: linux
      env: CXX=clang++ CLANG_VERSION="4.0.0" CXXFLAGS="-flto"
      addons:
        apt:
          sources: [ 'ubuntu-toolchain-r-test' ]
          packages: [ 'libstdc++6','libstdc++-5-dev' ]
    - os: linux
      env: CXX=clang++ CXXFLAGS="-flto -fsanitize=cfi -fvisibility=hidden"
      addons:
        apt:
          sources: [ 'ubuntu-toolchain-r-test' ]
          packages: [ 'libstdc++6','libstdc++-5-dev' ]
    - os: linux
      env: CXX=clang++ CXXFLAGS="-fsanitize=address -fsanitize-address-use-after-scope -fno-omit-frame-pointer -fno-common"
      addons:
        apt:
          sources: [ 'ubuntu-toolchain-r-test' ]
          packages: [ 'libstdc++6','libstdc++-5-dev' ]
    - os: linux
      env: CXX=clang++ CXXFLAGS="-fsanitize=undefined"
      addons:
        apt:
          sources: [ 'ubuntu-toolchain-r-test' ]
          packages: [ 'libstdc++6','libstdc++-5-dev' ]
    - os: linux
      env: CXX=clang++ CXXFLAGS="-fsanitize=integer"
      addons:
        apt:
          sources: [ 'ubuntu-toolchain-r-test' ]
          packages: [ 'libstdc++6','libstdc++-5-dev' ]
    - os: linux
      env: CXX=clang++ COVERAGE=true CXXFLAGS="--coverage"
      addons:
        apt:
          sources: [ 'ubuntu-toolchain-r-test' ]
          packages: [ 'libstdc++6','libstdc++-5-dev' ]
    - os: osx
      osx_image: xcode7.3

cache: apt

before_install:
 - git submodule update --init
 - |
   if [[ ${CXX} == "clang++" ]]; then
    CLANG_VERSION="${CLANG_VERSION:-3.9.1}"
    ./.mason/mason install clang++ ${CLANG_VERSION}
    export PATH=$(./.mason/mason prefix clang++ ${CLANG_VERSION})/bin:${PATH}
    ./.mason/mason install binutils 2.27
    export PATH=$(./.mason/mason prefix binutils 2.27)/bin:${PATH}
   fi

script:
 - make debug
 - make clean
 - make test
 - |
   if [[ ${COVERAGE} == 'true' ]]; then
     which llvm-cov
     curl -S -f https://codecov.io/bash -o codecov
     chmod +x codecov
     ./codecov -x "llvm-cov gcov" -Z
   fi