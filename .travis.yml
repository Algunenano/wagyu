language: generic
sudo: false

default_script: &run_script

script: *run_script

env:
  global:
    - secure: "BXHfO4lVVYy5RYX579WnWSQB9JJ63F+uAYEs/2v4ZpOdQ55Agn0FX4wTfNvrFFXgSal+PA1BQiXoHDEqb4SPzRK4zP6V1V/c9AS6E3zrhN48LUiJUTn8FaYJjph5qBykzXfi/B2kGqbHGrNixfWYogm9En3BWGC2wVN2ug2NTpKlRehV9pr8XSFLqPNbAXgZEF0SvD1ndIbs+ygxd/EKsNanT8N7S8xEMn0PZLjjR5KR12c691Xc9sk4b/PvZvUSE+AMwj72QylDPbzEpDojWR0UrVpQZ2lijEKR1bJ0E41Teyv6KLR+Ua69kmonrBH5dlfB0MJ9guL1nn85ZAThzXzSW4qkJUEjDtdX6qlLYrNlxQ1ljU8qDojbhxClkg/wJlZEYMxrJANwEhmcZxDEnwao5CfclZ0DdeqcJHKXZevIonM5hw8YfGkCYQP+UbxhmlkaF+g58kbruw6QLC+waJpIET+SOsNMUFJn8SLYOUsIqB279CKSh/QQUGZCA3uGuoYEzcuM1zpNPG+SOzDHhu8vJYhJfRnxl4BmHvWTezOGMb6eX1iW9VgmkPbMmSCoMjVyboTCQyZoDt04R50Gucqx7mHE/k5c09QVeXHhT6jsVVvEtv/c3B9t9cUWpBGnqwkTgZWhibSwTXuWQyljU+UOapFJqDlkkBKXrBWnqZA="

matrix:
  include:
    - os: linux
      env: CXX=g++-4.9
      addons:
        apt:
          sources: [ 'ubuntu-toolchain-r-test' ]
          packages: [ 'g++-4.9' ]
      script: *run_script
    - os: linux
      env: CXX=g++-4.9
      addons:
        apt:
          sources: [ 'ubuntu-toolchain-r-test' ]
          packages: [ 'g++-4.9' ]
        coverity_scan:
          project:
            name: mapbox/wagyu
            description: "Wagyu Library"
          notification_email: blake@mapbox.com
          build_command_prepend: "cov-configure --template --comptype g++ --compiler g++-4.9; make deps"
          build_command: make
          branch_pattern: coverity_scan
      script: *run_script
    - os: linux
      env: CXX=g++-5
      addons:
        apt:
          sources: [ 'ubuntu-toolchain-r-test' ]
          packages: [ 'g++-5' ]
      script: *run_script
    - os: linux
      env: CXX=g++-6
      addons:
        apt:
          sources: [ 'ubuntu-toolchain-r-test' ]
          packages: [ 'g++-6' ]
      script: *run_script
    - os: linux
      env: CXX=clang++ CXXFLAGS="-flto"
      addons:
        apt:
          sources: [ 'ubuntu-toolchain-r-test' ]
          packages: [ 'libstdc++6','libstdc++-5-dev' ]
      script: *run_script
    - os: linux
      env: CXX=clang++ CLANG_VERSION="4.0.0" CXXFLAGS="-flto"
      addons:
        apt:
          sources: [ 'ubuntu-toolchain-r-test' ]
          packages: [ 'libstdc++6','libstdc++-5-dev' ]
      script: *run_script
    - os: linux
      env: CXX=clang++ CXXFLAGS="-flto -fsanitize=cfi -fvisibility=hidden"
      addons:
        apt:
          sources: [ 'ubuntu-toolchain-r-test' ]
          packages: [ 'libstdc++6','libstdc++-5-dev' ]
      script: *run_script
    - os: linux
      env: CXX=clang++ CXXFLAGS="-fsanitize=address -fsanitize-address-use-after-scope -fno-omit-frame-pointer -fno-common"
      addons:
        apt:
          sources: [ 'ubuntu-toolchain-r-test' ]
          packages: [ 'libstdc++6','libstdc++-5-dev' ]
      script: *run_script
    - os: linux
      env: CXX=clang++ CXXFLAGS="-fsanitize=undefined"
      addons:
        apt:
          sources: [ 'ubuntu-toolchain-r-test' ]
          packages: [ 'libstdc++6','libstdc++-5-dev' ]
      script: *run_script
    - os: linux
      env: CXX=clang++ CXXFLAGS="-fsanitize=integer"
      addons:
        apt:
          sources: [ 'ubuntu-toolchain-r-test' ]
          packages: [ 'libstdc++6','libstdc++-5-dev' ]
      script: *run_script
    - os: osx
      osx_image: xcode7.3
      script: *run_script
    - os: linux
      env: CXX=clang++ COVERAGE=true CXXFLAGS="--coverage"
      addons:
        apt:
          sources: [ 'ubuntu-toolchain-r-test' ]
          packages: [ 'libstdc++6','libstdc++-5-dev' ]
      script:
       - make debug
       - |
         if [[ ${COVERAGE} == 'true' ]]; then
           which llvm-cov
           curl -S -f https://codecov.io/bash -o codecov
           chmod +x codecov
           ./codecov -x "llvm-cov gcov" -Z
         fi

cache: apt

before_install:
 - git submodule update --init
 - |
   if [[ ${CXX} == "clang++" ]]; then
    CLANG_VERSION="${CLANG_VERSION:-3.9.1}"
    ./.mason/mason install clang++ ${CLANG_VERSION}
    export PATH=$(./.mason/mason prefix clang++ ${CLANG_VERSION})/bin:${PATH}
    ./.mason/mason install binutils 2.27
    export PATH=$(./.mason/mason prefix binutils 2.27)/bin:${PATH}
   fi
 - echo -n | openssl s_client -connect scan.coverity.com:443 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' | sudo tee -a /etc/ssl/certs/ca-
